{
	"info": {
		"_postman_id": "137869b9-283d-45d7-89c0-6465f2b890be",
		"name": "HomeWork_2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "first",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Your test name\", function () {\r",
							"    \r",
							"    pm.expect(pm.response.text()).to.include('This is the first responce from server!');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}first",
					"host": [
						"{{url}}first"
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json()\r",
							"\r",
							"pm.test(\"name\", function () {\r",
							"   pm.expect(jsonData.name).to.eql('Ruslan');\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"age\", function () {\r",
							"    pm.expect(jsonData.age).to.eql('29');\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"salary\", function () {\r",
							"     pm.expect(jsonData.salary).to.eql(1);\r",
							"});\r",
							"\r",
							"var req_dat = request.data\r",
							"\r",
							"pm.test(\"name2\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(req_dat.name);\r",
							"});\r",
							"\r",
							"pm.test(\"age2\", function () {\r",
							"    pm.expect(jsonData.age).to.eql(req_dat.age);\r",
							"});\r",
							"pm.test(\"salary2\", function () {\r",
							"    pm.expect(jsonData.salary).to.eql(+(req_dat.salary));\r",
							"});\r",
							"\r",
							"  console.log(jsonData.family);\r",
							"\r",
							"pm.test(\"Your salary equal\", function () {\r",
							"    pm.expect(jsonData.family.u_salary_1_5_year).to.eql(req_dat.salary*4);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "29",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Ruslan",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "162.55.220.72:5005/user_info_3?name=Ruslan&age=29&salary=1",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Ruslan"
						},
						{
							"key": "age",
							"value": "29"
						},
						{
							"key": "salary",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"var req = pm.request.url.query.toObject();\r",
							"\r",
							"pm.test(\"name\", function () {\r",
							"     pm.expect(jsonData.name).to.eql(req.name);\r",
							"});\r",
							"\r",
							"pm.test(\"age\", function () {\r",
							"     pm.expect(jsonData.age).to.eql(req.age);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"salary\", function () {\r",
							"     pm.expect(jsonData.salary).to.eql(+(req.salary));\r",
							"});\r",
							"\r",
							"console.log(jsonData.family);\r",
							"\r",
							"pm.test(\"dog\", function () {\r",
							"    \r",
							"    pm.expect(jsonData.family.pets.dog).to.have.property('name');\r",
							"});\r",
							"\r",
							"pm.test(\"dog_age\", function () {\r",
							"    \r",
							"    pm.expect(jsonData.family.pets.dog).to.have.property('age');\r",
							"});\r",
							"\r",
							"pm.test(\"dog_Luky\", function () {\r",
							"    \r",
							"    pm.expect(jsonData.family.pets.dog.name).to.eql('Luky');\r",
							"});\r",
							"\r",
							"pm.test(\"dog_age4\", function () {\r",
							"    \r",
							"    pm.expect(jsonData.family.pets.dog.age).to.eql(4);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "{{url}}object_info_3?name=Ruslan&age=29&salary=1",
					"host": [
						"{{url}}object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Ruslan"
						},
						{
							"key": "age",
							"value": "29"
						},
						{
							"key": "salary",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"var req = pm.request.url.query.toObject();\r",
							"\r",
							"pm.test(\"name\", function () {\r",
							"     pm.expect(jsonData.name).to.eql(req.name);\r",
							"});\r",
							"\r",
							"pm.test(\"age\", function () {\r",
							"     pm.expect(jsonData.age).to.eql(Number(req.age));\r",
							"});\r",
							"\r",
							"console.log(req.salary)\r",
							"\r",
							"console.log(jsonData.salary);\r",
							"\r",
							"console.log(jsonData.salary[0])\r",
							"console.log(jsonData.salary[1])\r",
							"console.log(jsonData.salary[2])\r",
							"\r",
							"pm.test(\"Salary\", function () {\r",
							"    pm.expect(jsonData.salary[0]).to.eql(+req.salary);\r",
							"});\r",
							"\r",
							"pm.test('Salary2', function (){\r",
							"    pm.expect(+jsonData.salary[1]).to.eql(req.salary*2)\r",
							"})\r",
							"\r",
							"pm.test('Salary3', function(){\r",
							"    pm.expect(+jsonData.salary[2]).to.eql(req.salary*3)\r",
							"})\r",
							"\r",
							" pm.environment.set(\"name\", req.name);\r",
							"  pm.environment.set(\"age\", req.age);\r",
							"   pm.environment.set(\"salary\", req.salary);\r",
							"\r",
							"   for(i = 0; i < jsonData.salary.length; i++){\r",
							"        console.log(jsonData.salary[i]);\r",
							"    }\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}object_info_4?name=Ruslan&age=29&salary=1",
					"host": [
						"{{url}}object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Ruslan"
						},
						{
							"key": "age",
							"value": "29"
						},
						{
							"key": "salary",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.get(\"salary\");\r",
							"pm.environment.get(\"age\");\r",
							"pm.environment.get(\"name\");\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"var req = pm.request.body.formdata.toObject();\r",
							"\r",
							"\r",
							"pm.test('start_salary', function(){\r",
							"    pm.expect(jsonData).to.have.property('start_qa_salary');\r",
							"});\r",
							"\r",
							"pm.test(\"json_qa_salary_after_6_months\"), function (){\r",
							"    pm.expect(jsonData).to.have.property('qa_salary_after_6_months')\r",
							"}\r",
							"\r",
							"pm.test(\"qa_salary_after_12_months\", function () {\r",
							"    pm.expect(jsonData).to.have.property('qa_salary_after_12_months')\r",
							"});\r",
							"\r",
							"pm.test(\"qa_salary_after_1.5_years\", function () {\r",
							"    pm.expect(jsonData).to.have.property('qa_salary_after_1.5_year')\r",
							"});\r",
							"\r",
							"pm.test(\"qa_salary_after_3.5_years\", function () {\r",
							"    pm.expect(jsonData).to.have.property('qa_salary_after_3.5_years')\r",
							"});\r",
							"\r",
							"pm.test(\"person\", function () {\r",
							"    pm.expect(jsonData).to.have.property('person')\r",
							"});\r",
							"\r",
							"pm.test(\"2start_qa_salary\", function () {\r",
							"     pm.expect(jsonData.start_qa_salary).to.eql(+(req.salary));\r",
							"});\r",
							"\r",
							"pm.test('2qa_salary_after_6_months', function (){\r",
							"    pm.expect(jsonData.qa_salary_after_6_months).to.eql(+req.salary*2)\r",
							"})\r",
							"\r",
							"pm.test('2qa_salary_after_12_months', function(){\r",
							"    pm.expect(jsonData.qa_salary_after_12_months).to.eql(+req.salary*2.7)\r",
							"})\r",
							"pm.test('2qa_salary_after_1.5', function(){\r",
							"    pm.expect(jsonData['qa_salary_after_1.5_year']).to.eql(+req.salary*3.3)\r",
							"});\r",
							"pm.test('qa_salary_after_3.5_years', function(){\r",
							"    pm.expect(jsonData['qa_salary_after_3.5_years']).to.eql(+req.salary*3.8)\r",
							"})\r",
							"\r",
							"pm.test('2person', function(){\r",
							"    pm.expect(jsonData.person.u_name[1]).to.eql(+req.salary)\r",
							"})\r",
							"\r",
							"pm.test('u_age', function(){\r",
							"    pm.expect(jsonData.person.u_age).to.eql(+req.age)\r",
							"})\r",
							"\r",
							"pm.test('u_salary_5_years ', function(){\r",
							"    pm.expect(jsonData.person.u_salary_5_years).to.eql(+req.salary*4.2)\r",
							"})\r",
							"\r",
							"\r",
							"    for(i = 0; i < jsonData.person.u_name.length; i++){\r",
							"        console.log(jsonData.person.u_name[i]);\r",
							"    }\r",
							"    \r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Ruslan",
							"type": "text"
						},
						{
							"key": "age",
							"value": "29",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}user_info_2",
					"host": [
						"{{url}}user_info_2"
					]
				}
			},
			"response": []
		}
	]
}